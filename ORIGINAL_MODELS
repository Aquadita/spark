
CAMPTIMES = (
    (1,'morning'),
    (2,'noon'),
    (3,'evening'),
    (4,'night'),
)
NOISE_LEVELS = (
    (1,'quiet'),
    (2,'medium'),
    (3,'noisy'),
    (4,'very noisy'),
)

class CampLocation(models.Model): # Can be part of camp, but for better modularity

    # Arrival Checklist
    has_construction_team=models.BooleanField()
    has_deconst_team=models.BooleanField()
    has_gifting=models.BooleanField()
    has_leds=models.BooleanField()

    # Neighbour Camps
    requested_nearby_camps=models.ManyToManyField(Camp, related_name="requested_nearby_camps")

CAMP_MEMBERSHIP_STATUS = (
    (1,'not a member'),
    (2,'awaiting approval'),
    (3,'approved'),
)
class CampMember(models.Model):
    camp=models.ForeignKey(Camp)
    user=models.ForeignKey(User)
    status=models.IntegerField(choices=CAMP_MEMBERSHIP_STATUS)
    has_ticket=models.BooleanField()
    early_arrival=models.BooleanField()
    is_editor=models.BooleanField()

class CampSafety(models.Model):
    camp=models.OneToOneField(Camp)
    have_art=models.BooleanField()
    installation_over_2m=models.BooleanField()
    # Safety checklist:
    is_gas_2m_from_stove=models.BooleanField()
    is_electricity_not_near_water=models.BooleanField()

ACTIVITY_TYPES = (
    (1, 'workshop'),
    (2, 'party'),
    (3, 'lecture'),
    (4, 'show'),
    (5, 'parade/hike'),
    (6, 'game'),  
    (7, 'movie'),
    (8, 'other'),
)

class Workshop(models.Model):
    owner=models.ForeignKey(Camp)
    activity_name_he=models.CharField(max_length=50)
    activity_name_en=models.CharField(max_length=50)
    activity_desc_he=models.TextField()
    activity_desc_en=models.TextField()
    activity_datetime=models.DateTimeField()
    activity_type=models.IntegerField(choices=ACTIVITY_TYPES)
    activity_type_other=models.TextField()
    adult_only=models.BooleanField()
    child_friendly=models.BooleanField()
